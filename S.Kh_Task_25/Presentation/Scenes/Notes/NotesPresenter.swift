//
//  NotesPresenter.swift
//  S.Kh_Task_25
//
//  Created by Saba Khitaridze on 24.08.22.
//  Copyright (c) 2022 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol NotesPresentationLogic {
    func presentNotes(response: NoteModel.Response)
    func didFailPresentNotes(withError: FileManagerError)
}

class NotesPresenter {
    weak var viewController: NotesDisplayLogic?
    
}

extension NotesPresenter: NotesPresentationLogic {
    
    func presentNotes(response: NoteModel.Response) {
        var displayedNotes = [NoteViewModel]()
        response.notes.forEach { note in
            displayedNotes.append(NoteViewModel(noteTitle: note.title, noteDate: note.date))
        }
        
        let viewModel = NoteModel.ViewModel(displayedNotes: displayedNotes)
        viewController?.displayNotes(viewModel: viewModel)
    }
    
    func didFailPresentNotes(withError: FileManagerError) {
        viewController?.didFailDisplayNotes(withError: withError)
    }
    
}
